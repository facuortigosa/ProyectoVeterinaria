<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAzCQkGURMYDWADAwNTAAAAOQAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABx8mFnJQZzu5f6Vf35bCb/uYxXH/mMVx/4et
        Y+dRaT25LDghhAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAFD1OLaSVwW/6mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf9nhUzGGiMTUAAAAAAAAAAAAAAAAC8+I5eXxHH+mMVx/5jFcf+YxXH/UGU9vVZs
        Q7pdc0e6Vm1Bu5jFcf+YxXH/mMVx/3iaWdcSFgtFAAAAAAAAADh9ol3emMVx/5jFcf+YxXH/mMVx/4uL
        gcjl5db/5eXW/3uBb7qYxXH/mMVx/5jFcf+YxXH/SmE3sAAAAAQdKBZ0mMVx/5jFcf+YxXH/mMVx/5bD
        cPyQkIbK5eXW/+Xl1v93fWu4mMVx/5jFcf+YxXH/mMVx/464ae8HCgNLLzwiiJjFcf+YxXH/T2I/t3mA
        bbiDiXazwsK14uXl1v/l5db/paaYznqHarZ6h2q2bI1SyZjFcf+YxXH/KzcgeDRCJY+YxXH/mMVx/2d1
        VrXl5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/111Rr2YxXH/mMVx/zVFJ4I6SiuJmMVx/5jF
        cf9mdle25eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v9cdUW/mMVx/5jFcf81RSaGLjsieZjF
        cf+YxXH/Slg+toODesaDg3rGzc3B6uXl1v/l5db/yMi75a6uo9aurqPWVWxAu5jFcf+YxXH/IS0aaw4R
        CFuWw3D8mMVx/5jFcf+YxXH/k75s95iYjs7l5db/5eXW/2VvWbSBp2Digadg4pC6a/SYxXH/irNn7AQE
        AEYAAAAXYXxHxZjFcf+YxXH/mMVx/422ae+jo5jS5eXW/+Xl1v9td160mMVx/5jFcf+YxXH/mMVx/09n
        O7cAAAAGAAAAAB8mFnKKs2fsmMVx/5jFcf+Tv233VWhEsGJ1T7FcbUu0WXFDvZjFcf+YxXH/mMVx/4y2
        ae4XHBJjAAAAAAAAAAAAAAABHycXe3mcWtmYxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/424
        afAoMx2LAAAAAQAAAAAAAAAAAAAAAAAAAAAJCQk4PlIvk1x3RcWJsGXpmMVx/5jFcf+YxXH/gqlg4kdc
        NbcWHRFpAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAANAoNCGIfKBhsFx8RWgAA
        AD0AAAAFAAAAAAAAAAAAAAAAAAAAAP//AADwDwAAwAcAAIADAACAAQAAgAEAAAABAAAAAAAAAAAAAIAB
        AACAAQAAgAEAAMADAADgAwAA8A8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAXQAA
        AJABAQG7BQgEvwcJBcQHCQXEBwkFxAEDAbgAAACYAAAAZgAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AwMBrhkh
        EsFPZTvEfqRe35jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/4avZOhYc0HHJC4awQUIBbsAAABrAAAADwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiAwQDtTVF
        KL+NuGnwmMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/lsNw/GWD
        S80RFQzCAAAAegAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUhEW
        DcOJsGXpmMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf9lg0vNBwgEwgAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AE4kLxu/lsNw/JjFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+LtWftERUMxgAAAEMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAwFBoOw5fDcP2YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/ibJm64qzZ+yYxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+Tv233ERUMxQAAADwAAAAAAAAAAAAA
        AAAAAAAAAAAAAQUHBL2NuGnwmMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf8LDArWJyckzCcn
        JMwnJyTMJyckvycnJL86OjfBExgPxpjFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+SvW31CQwGxQAA
        AA4AAAAAAAAAAAAAAAAAAABLPE0twJjFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/l8Rx/isr
        KcPl5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v8dIxi/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf9vkFLTAAIAkQAAAAAAAAAAAAAAAAACAJyKtGbtmMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+Qu2z0NjYyweXl1v/l5db/5eXW/+Xl1v/l5db/5eXW/xwhGMCYxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf8ZIRTAAAAAFwAAAAAAAAABCQwGxZjFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/423afE7OzfB5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/HSMXwJjFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf+YxXH/mMVx/2qJTs0AAAB8AAAAAAAAABofKRjDmMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf+YxXH/j7hq8jo6NsHl5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v8cIRXBmMVx/5jF
        cf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/wYIBLYAAAAAAAAAMjZFKMCYxXH/mMVx/5jF
        cf+YxXH/eJ1a2BccEskbIBbJHiQXvSEqGrcYHxK9Ojo2weXl1v/l5db/5eXW/+Xl1v/l5db/5eXW/wYI
        BdcsOSHALDkhwC47Ir47TSy6X3pHwpjFcf+YxXH/mMVx/5jFcf+YxXH/Fh0RxAAAAAsAAABLR1s1wpjF
        cf+YxXH/mMVx/5jFcf9adUPJjIyCyuXl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl
        1v/l5db/19fI8NXVyO/R0cTvxcW48MLCteIdIBm/mMVx/5jFcf+YxXH/mMVx/5jFcf81RSi/AAAALAAA
        AFRUbD7GmMVx/5jFcf+YxXH/mMVx/1hzQsiPj4bM5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/yElHbqYxXH/mMVx/5jFcf+YxXH/mMVx/0dc
        NcIAAABIAAAAVlZvP8aYxXH/mMVx/5jFcf+YxXH/WHNCyJGRh87l5db/5eXW/+Xl1v/l5db/5eXW/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/ISUdu5jFcf+YxXH/mMVx/5jF
        cf+YxXH/VW8/xgAAAFIAAABTVnBAxpjFcf+YxXH/mMVx/5jFcf9Zc0LIjo6FzeXl1v/l5db/5eXW/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v8gJBy+mMVx/5jF
        cf+YxXH/mMVx/5jFcf9PZTvEAAAATgAAADxBVTDAmMVx/5jFcf+YxXH/mMVx/1t2Q8mMjIPM5eXW/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/x8k
        Gb+YxXH/mMVx/5jFcf+YxXH/mMVx/0NXMsEAAABAAAAAJC88I7+YxXH/mMVx/5jFcf+YxXH/XHhFyoqK
        gMvl5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl
        1v/l5db/Gx8XwJjFcf+YxXH/mMVx/5jFcf+YxXH/KDQfvwAAACAAAAAKGyMVw5jFcf+YxXH/mMVx/5jF
        cf9qiU7SFhcUySstKL8rLSi/Ky0ovystKL93d2/F5eXW/+Xl1v/l5db/5eXW/+Xl1v/W1snvVlZRwGdn
        YMF1dW3Eg4N6xoODesYTExDKmMVx/5jFcf+YxXH/mMVx/5jFcf8SGA3CAAAAAwAAAAALDwi+mMVx/5jF
        cf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/kLpr9Ts7N8Ll5db/5eXW/+Xl1v/l5db/5eXW/8HB
        tN0jLBnAcJNU1GWETM1XckHHVnBAxmSCSs6YxXH/mMVx/5jFcf+YxXH/lsNw+gQGA60AAAAAAAAAAAIC
        AKCQumvzmMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+JsmfsRkZAwuXl1v/l5db/5eXW/+Xl
        1v/l5db/xMS23zZGKL6YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf9qik/PAAAAcwAA
        AAAAAAAAAAAAXlJrPcSYxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/4KpYeVQUEvC5eXW/+Xl
        1v/l5db/5eXW/+Xl1v/ExLffNEMnvpjFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/xwl
        FcAAAAAZAAAAAAAAAAAAAAALCg4IyJfEcf6YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/fqRe4FhY
        UcLl5db/5eXW/+Xl1v/l5db/5eXW/8bGud8zQya+mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+HrmTnAgMCqQAAAAAAAAAAAAAAAAAAAAAAAABnSVw1wZjFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+CqWHlGxsaxmVlXrhlZV64VlZRwFZWUcBWVlHAQkI+vjREJ7+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/xwkFMAAAAAnAAAAAAAAAAAAAAAAAAAAAAAAAAADBQOcaYlPz5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf94nFjbdZZW1nWYWNeBp2Digadg4oGnYOKBp2Dikr1t9ZjFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf9gfUjKAAAAhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcDBAGxT2U7xJjF
        cf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf+YxXH/cpRU1AQGA6wAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAACCHigWwYu1Z+2YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf+YxXH/mMVx/2SCS8wEBgOwAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAwBAYDrDNDJ7+HrWPnmMVx/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jF
        cf+YxXH/mMVx/5jFcf+YxXH/mMVx/4mzZuogKRjAAAAAkAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQAAAJANEAnENEQnv2WETM2QumvzmMVx/5jF
        cf+YxXH/mMVx/5jFcf+XxHH+gqlg4VVvP8UTGA7GAgICpwAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAA0AAAAdAAA
        AKEEBgOxCw4Iug4SC7sOEgu7DhIKtQUGA6oAAACPAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////4B///wAD//wAAP/4AAA/8AAAH+AAAA/AAAAHwAAAA4AA
        AAOAAAADgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAPAAAADwAAAA+AA
        AAfgAAAH8AAAD/gAAB/+AAA//4AA///4B///////
</value>
  </data>
</root>